/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, VacationRule as PrismaVacationRule } from "@prisma/client";

export class VacationRuleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.VacationRuleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.vacationRule.count(args);
  }

  async vacationRules(
    args: Prisma.VacationRuleFindManyArgs
  ): Promise<PrismaVacationRule[]> {
    return this.prisma.vacationRule.findMany(args);
  }
  async vacationRule(
    args: Prisma.VacationRuleFindUniqueArgs
  ): Promise<PrismaVacationRule | null> {
    return this.prisma.vacationRule.findUnique(args);
  }
  async createVacationRule(
    args: Prisma.VacationRuleCreateArgs
  ): Promise<PrismaVacationRule> {
    return this.prisma.vacationRule.create(args);
  }
  async updateVacationRule(
    args: Prisma.VacationRuleUpdateArgs
  ): Promise<PrismaVacationRule> {
    return this.prisma.vacationRule.update(args);
  }
  async deleteVacationRule(
    args: Prisma.VacationRuleDeleteArgs
  ): Promise<PrismaVacationRule> {
    return this.prisma.vacationRule.delete(args);
  }
}
